package iniconf

import (
	"fmt"
	"os"

	"gopkg.in/ini.v1"
)

var Cfg *ini.File

type ObsConfig struct {
	AK                         string
	SK                         string
	Point                      string
	Bucket                     string
	DownloadCvrf               string
	DownloadUpdateinfo         string
	DownloadUpdateInfoHotPatch string
	UploadDir                  string
}
type UploadUser struct {
	Username string
	Password string
}

var Obs = new(ObsConfig)
var Upload = new(UploadUser)

func InitConf() error {
	var err error
	Cfg, err = ini.Load("./conf/app.ini")
	if err != nil {
		fmt.Println("Fail to Load ‘conf/app.ini’:", err)
		return err
	}
	err = initObs()
	if err != nil {
		fmt.Println("Fail to Load obs:", err)
		return err
	}
	initUpload()
	return nil
}

func initObs() error {
	logConf, err := Cfg.GetSection("obs")
	if err != nil {
		return err
	}
	ak := logConf.Key("Ak").MustString("AK")
	sk := logConf.Key("Sk").MustString("SK")

	Obs.SK = os.Getenv(sk)
	Obs.AK = os.Getenv(ak)
	Obs.Point = logConf.Key("END_POINT").String()
	Obs.Bucket = logConf.Key("BUCKET_NAME").String()
	Obs.DownloadUpdateinfo = logConf.Key("UPDATEINFO").String()
	Obs.DownloadUpdateInfoHotPatch = logConf.Key("UPDATEINFOHOTPATCH").String()
	Obs.DownloadCvrf = logConf.Key("CVRF").String()
	Obs.UploadDir = logConf.Key("UPLOAD_DIR").String()
	return nil
}

func initUpload() {
	Upload.Username = os.Getenv("UPLOAD_USERNAME")
	Upload.Password = os.Getenv("UPLOAD_PASSWORD")
}
