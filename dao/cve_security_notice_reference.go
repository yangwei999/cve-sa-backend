package dao

import (
	"cve-sa-backend/iniconf"
	"cve-sa-backend/models"
	_const "cve-sa-backend/utils/const"

	"gorm.io/gorm"
)

type securityNoticeReference struct {
}

var DefaultSecurityNoticeReference = securityNoticeReference{}

func (s securityNoticeReference) GetReferenceByNo(securityNoticeNo string) (datas []models.CveSecurityNoticeReference, err error) {
	err = iniconf.DB.
		Model(&models.CveSecurityNoticeReference{}).
		Where("security_notice_no = ?", securityNoticeNo).
		Where("type = ?", _const.TypeOther).
		Find(&datas).Error
	return
}

func (s securityNoticeReference) CreateReference(datas []models.CveSecurityNoticeReference, tx *gorm.DB) (err error) {
	err = tx.Model(&models.CveSecurityNoticeReference{}).Create(&datas).Error
	return
}

func (s securityNoticeReference) GetReferenceList(data *models.CveSecurityNoticeReference, tx *gorm.DB) ([]models.CveSecurityNoticeReference, error) {
	var list []models.CveSecurityNoticeReference
	err := tx.Model(&models.CveSecurityNoticeReference{}).Where(data).Find(&list).Error
	return list, err
}

func (s securityNoticeReference) DeleteReferences(datas []models.CveSecurityNoticeReference, tx *gorm.DB) error {
	err := tx.Model(&models.CveSecurityNoticeReference{}).Delete(&datas).Error
	return err
}
