package dao

import (
	"cve-sa-backend/models"
	"cve-sa-backend/utils"

	"gorm.io/gorm"
	"gorm.io/gorm/clause"
)

type cveCvrfSync struct {
}

var DefaultCvrfSync = cveCvrfSync{}

func (c cveCvrfSync) GetSyncOne(data *models.CveCvrfSync, tx *gorm.DB) (*models.CveCvrfSync, error) {
	err := tx.Where(data).First(data).Error
	if utils.ErrorNotFound(err) {
		return nil, nil
	}
	return data, err
}

func (c cveCvrfSync) CreateSyncOne(data *models.CveCvrfSync, tx *gorm.DB) error {
	return tx.Clauses(clause.OnConflict{
		Columns:   []clause.Column{{Name: "id"}},
		DoUpdates: clause.AssignmentColumns([]string{"cvrf_file", "type", "update_time"}),
	}).Create(data).Error
}
