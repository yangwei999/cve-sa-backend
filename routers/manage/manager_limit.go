package routers

import (
	"sync"
	"time"

	"github.com/gin-gonic/gin"

	"cve-sa-backend/utils/tools"
)

var (
	lastAccessTime = make(map[string]time.Time)
	lock           sync.Mutex
)

func managerLimit(c *gin.Context) {
	remoteIp := c.ClientIP()
	now := time.Now()

	lock.Lock()
	last, ok := lastAccessTime[remoteIp]
	lock.Unlock()

	if ok && now.Sub(last) <= time.Second*30 {
		c.Abort()
		tools.Failure(c, "visit too often")
		return
	}

	lock.Lock()
	lastAccessTime[remoteIp] = now
	lock.Unlock()

	c.Next()
}
